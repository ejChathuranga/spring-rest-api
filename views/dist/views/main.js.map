{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/assignee.ts","./src/app/component/employee-create/employee-create.component.ts","./src/app/component/employee-create/employee-create.component.html","./src/app/component/employee-list/employee-list.component.ts","./src/app/component/employee-list/employee-list.component.html","./src/app/component/employee-update/employee-update.component.ts","./src/app/component/employee-update/employee-update.component.html","./src/app/component/header/header.component.ts","./src/app/component/header/header.component.html","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/const.ts","./src/app/service/employee-create.service.ts","./src/app/user.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeUpdateComponent } from './component/employee-update/employee-update.component';\r\nimport { EmployeeCreateComponent } from './component/employee-create/employee-create.component';\r\nimport { EmployeeListComponent } from './component/employee-list/employee-list.component';\r\nimport { HomeComponent } from './component/home/home.component';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: '/all' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'all', component: EmployeeListComponent },\r\n  { path: 'add-employee', component: EmployeeCreateComponent },\r\n  { path: 'update-employee', component: EmployeeUpdateComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'views';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { EmployeeCreateService } from './service/employee-create.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './component/home/home.component';\r\nimport { EmployeeListComponent } from './component/employee-list/employee-list.component';\r\nimport { EmployeeCreateComponent } from './component/employee-create/employee-create.component';\r\nimport { HeaderComponent } from './component/header/header.component';\r\nimport { EmployeeUpdateComponent } from './component/employee-update/employee-update.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    EmployeeListComponent,\r\n    EmployeeCreateComponent,\r\n    HeaderComponent,\r\n    EmployeeUpdateComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [EmployeeCreateService, FormBuilder],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [EmployeeUpdateComponent],\r\n})\r\nexport class AppModule {}\r\n","export class Assignee {\r\n  userId: number;\r\n  supervisorId: number;\r\n\r\n  constructor() {}\r\n}\r\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { EmployeeCreateService } from './../../service/employee-create.service';\r\nimport { User } from './../../user';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-create',\r\n  templateUrl: './employee-create.component.html',\r\n  styleUrls: ['./employee-create.component.css'],\r\n})\r\nexport class EmployeeCreateComponent implements OnInit {\r\n  user: User = new User();\r\n  message: any;\r\n  isBad: boolean = false;\r\n  isSuccess: boolean = false;\r\n  selectedRole: string;\r\n  selectedDep: string;\r\n\r\n  rolls: Array<any> = ['Employee', 'Supervisor'];\r\n  deps: Array<any> = [\r\n    'Finance & Accounts',\r\n    'Human Resources',\r\n    'Production',\r\n    'Purchasing',\r\n    'Sales and marketing',\r\n  ];\r\n\r\n  constructor(private userService: EmployeeCreateService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public registerNow() {\r\n    if (\r\n      this.selectedDep == 'Choose Role' ||\r\n      this.selectedRole == 'Choose Role'\r\n    ) {\r\n      this.isSuccess = false;\r\n      this.isBad = true;\r\n      this.message = 'Please select or add valid information';\r\n      return;\r\n    }\r\n\r\n    this.isBad = false;\r\n    this.isSuccess = false;\r\n    this.user.department = this.selectedDep;\r\n    this.user.roll = this.selectedRole;\r\n\r\n    console.log(this.user);\r\n\r\n    let res = this.userService.addEmp(this.user);\r\n    res.subscribe(\r\n      (data) => {\r\n        if (data.code != 200) {\r\n          this.isBad = true;\r\n          this.isSuccess = false;\r\n          this.message = data.msg;\r\n        } else {\r\n          this.isSuccess = true;\r\n          this.isBad = false;\r\n          this.message = ' Registration Success!';\r\n          this.user.firstName = '';\r\n          this.user.lastName = '';\r\n          this.user.emailId = '';\r\n          this.user.salary = '';\r\n          this.user.address = '';\r\n          this.user.department = '';\r\n          this.user.salary = '';\r\n          this.selectedDep = 'Choose Role';\r\n          this.selectedRole = 'Choose Role';\r\n        }\r\n      },\r\n      (err) => {\r\n        this.isBad = true;\r\n        this.isSuccess = false;\r\n        this.message = 'Please ennter valid information';\r\n      }\r\n    );\r\n  }\r\n\r\n  changeRole(e) {\r\n    console.log(e.target.value);\r\n    this.selectedRole = e.target.value;\r\n  }\r\n\r\n  changeDep(e) {\r\n    console.log('-->>>' + e.target.value);\r\n    this.selectedDep = e.target.value;\r\n  }\r\n\r\n  form = new FormGroup({\r\n    website: new FormControl('', Validators.required),\r\n  });\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n}\r\n","<div class=\"card bg-light\">\r\n  <div\r\n    *ngIf=\"isBad == true\"\r\n    class=\"alert alert-danger alert-dismissible fade show\"\r\n    role=\"alert\"\r\n  >\r\n    <strong>Something went wrong! </strong> {{ message }}\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"isSuccess == true\"\r\n    class=\"alert alert-primary alert-dismissible fade show\"\r\n    role=\"alert\"\r\n  >\r\n    <strong> {{ message }} </strong>\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <article\r\n    class=\"card-body mx-auto\"\r\n    style=\"max-width: 400px; margin-top: 20px;\"\r\n  >\r\n    <h4 class=\"card-title mt-3 text-center\">Employee Registration</h4>\r\n    <p class=\"text-center\">\r\n      You can add new employee's basic details from here\r\n    </p>\r\n    <p></p>\r\n    <form>\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> <i class=\"fa fa-user\"></i> </span>\r\n        </div>\r\n        <input\r\n          class=\"form-control\"\r\n          placeholder=\"First name\"\r\n          type=\"text\"\r\n          required\r\n          id=\"firstName\"\r\n          name=\"firstName\"\r\n          [(ngModel)]=\"user.firstName\"\r\n        />\r\n      </div>\r\n      <!-- form-group// -->\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> <i class=\"fa fa-envelope\"></i> </span>\r\n        </div>\r\n        <input\r\n          class=\"form-control\"\r\n          placeholder=\"Last Name\"\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          name=\"lastName\"\r\n          required\r\n          [(ngModel)]=\"user.lastName\"\r\n        />\r\n      </div>\r\n\r\n      <!-- form-group// -->\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> <i class=\"fa fa-envelope\"></i> </span>\r\n        </div>\r\n        <input\r\n          required\r\n          id=\"emailId\"\r\n          name=\"emailId\"\r\n          [(ngModel)]=\"user.emailId\"\r\n          class=\"form-control\"\r\n          placeholder=\"Email address\"\r\n          type=\"email\"\r\n        />\r\n      </div>\r\n\r\n      <!-- select role -->\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> </span>\r\n        </div>\r\n\r\n        <div class=\"input-group-prepend\">\r\n          <label class=\"input-group-text\"> Role </label>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div ngbDropdown class=\"d-inline-block\">\r\n              <select class=\"form-control\" (change)=\"changeRole($event)\">\r\n                <option>Choose Role</option>\r\n                <option *ngFor=\"let roll of rolls\">{{ roll }}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- select department -->\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> </span>\r\n        </div>\r\n\r\n        <div class=\"input-group-prepend\">\r\n          <label class=\"input-group-text\"> Department </label>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div ngbDropdown class=\"d-inline-block\">\r\n              <select class=\"form-control\" (change)=\"changeDep($event)\">\r\n                <option>Choose Department</option>\r\n                <option *ngFor=\"let dep of deps\">{{ dep }}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- form-group// -->\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> <i class=\"fa fa-envelope\"></i> </span>\r\n        </div>\r\n        <input\r\n          required\r\n          class=\"form-control\"\r\n          placeholder=\"Salary\"\r\n          type=\"text\"\r\n          id=\"salary\"\r\n          name=\"salary\"\r\n          [(ngModel)]=\"user.salary\"\r\n        />\r\n      </div>\r\n\r\n      <!-- form-group// -->\r\n      <div class=\"form-group input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\"> <i class=\"fa fa-envelope\"></i> </span>\r\n        </div>\r\n        <input\r\n          required\r\n          class=\"form-control\"\r\n          placeholder=\"Address\"\r\n          type=\"text\"\r\n          id=\"address\"\r\n          name=\"address\"\r\n          [(ngModel)]=\"user.address\"\r\n        />\r\n      </div>\r\n\r\n      <!-- form-group// -->\r\n      <div class=\"form-group\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary btn-block\"\r\n          (click)=\"registerNow()\"\r\n        >\r\n          Register Employee\r\n        </button>\r\n      </div>\r\n      <!-- form-group// -->\r\n    </form>\r\n  </article>\r\n</div>\r\n<!-- card.// -->\r\n","import { Assignee } from './../../assignee';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { User } from './../../user';\r\nimport { EmployeeCreateService } from './../../service/employee-create.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css'],\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n  employees: Array<User>;\r\n  showUpdateMode: boolean = false;\r\n  selectedEmp: User;\r\n  user: User = new User();\r\n  message: string;\r\n  showModel: boolean = false;\r\n  selectedRole: string;\r\n  selectedDep: string;\r\n  supervisorName: string = '';\r\n  supervisors: any;\r\n  messageSuccess: string;\r\n  isSuccess: boolean = false;\r\n  assignedSupervisor: any;\r\n  networkFail: boolean;\r\n  messageFailed: string;\r\n\r\n  title = 'appBootstrap';\r\n  isBad: boolean = false;\r\n  closeResult: string;\r\n\r\n  rolls: Array<any> = ['Employee', 'Supervisor'];\r\n  deps: Array<any> = [\r\n    'Finance & Accounts',\r\n    'Human Resources',\r\n    'Production',\r\n    'Purchasing',\r\n    'Sales and marketing',\r\n  ];\r\n\r\n  constructor(\r\n    private employeeList: EmployeeCreateService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  public getAll() {\r\n    this.employeeList.getAll().subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        let arr = <User>data;\r\n        let newArray = [];\r\n\r\n        arr.forEach(function (element) {\r\n          let user: User = new User();\r\n          user.id = element.id;\r\n          user.firstName = element.firstName;\r\n          user.lastName = element.lastName;\r\n          user.emailId = element.emailId;\r\n          user.salary = element.salary;\r\n          user.address = element.address;\r\n          user.department = element.department;\r\n          user.supervisor = element.supervisor;\r\n          user.roll = element.roll;\r\n\r\n          if (element.roll == 'Supervisor') {\r\n            user.isSupervisor = true;\r\n          } else {\r\n            user.isSupervisor = false;\r\n          }\r\n\r\n          newArray.push(user);\r\n        });\r\n\r\n        this.employees = newArray;\r\n      },\r\n      (err) => {\r\n        this.networkFail = true;\r\n        this.messageFailed = 'Please check server is running or not!';\r\n      }\r\n    );\r\n  }\r\n\r\n  public showUpdateEmp(content, user: User) {\r\n    this.showModel = true;\r\n    this.user = user;\r\n    this.modalService\r\n      .open(content, { ariaLabelledBy: 'modal-basic-title' })\r\n      .result.then(\r\n        (result) => {\r\n          this.closeResult = `Closed with: ${result}`;\r\n        },\r\n        (reason) => {\r\n          this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n        }\r\n      );\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  public assignSupervisor(content, user: User) {\r\n    this.selectedEmp = user;\r\n    let resAssignee = this.employeeList.getSupervisor(user.id);\r\n\r\n    resAssignee.subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        this.assignedSupervisor = res;\r\n        this.getAllSupervisors(content);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n\r\n    this.showModel = true;\r\n    this.user = user;\r\n  }\r\n\r\n  getAllSupervisors(content) {\r\n    let resAllSups = this.employeeList.getAllSuperes(this.supervisorName);\r\n\r\n    resAllSups.subscribe(\r\n      (data) => {\r\n        // console.log(data);\r\n        this.supervisors = data;\r\n\r\n        this.modalService\r\n          .open(content, { ariaLabelledBy: 'modal-basic-title' })\r\n          .result.then(\r\n            (result) => {\r\n              this.closeResult = `Closed with: ${result}`;\r\n            },\r\n            (reason) => {\r\n              this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n            }\r\n          );\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  assignSupervisorToUser(supervisor: User) {\r\n    console.log(supervisor);\r\n    let assignee: Assignee = new Assignee();\r\n    assignee.userId = this.selectedEmp.id;\r\n    assignee.supervisorId = supervisor.id;\r\n    console.log(assignee);\r\n    let res = this.employeeList.addAssignee(assignee);\r\n\r\n    res.subscribe(\r\n      (data) => {\r\n        this.isSuccess = true;\r\n        this.messageSuccess = 'Successfully updated the user';\r\n        this.modalService.dismissAll();\r\n        this.getAll();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public registerNow() {\r\n    if (\r\n      this.selectedDep == 'Choose Role' ||\r\n      this.selectedRole == 'Choose Role'\r\n    ) {\r\n      this.isBad = true;\r\n      this.message = 'Please select valid information';\r\n      return;\r\n    }\r\n    this.isBad = false;\r\n    this.user.department = this.selectedDep;\r\n    this.user.roll = this.selectedRole;\r\n    console.log(this.user);\r\n    let res = this.employeeList.updateEmp(this.user.id, this.user);\r\n    res.subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        if (data.code != 200) {\r\n          this.isBad = true;\r\n          this.message = data.msg;\r\n        } else {\r\n          this.selectedDep = 'Choose Role';\r\n          this.selectedRole = 'Choose Role';\r\n          this.modalService.dismissAll();\r\n          this.getAll();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n\r\n        this.isBad = true;\r\n        this.message = 'Please ennter valid information';\r\n      }\r\n    );\r\n  }\r\n\r\n  contact_form = new FormGroup({\r\n    website: new FormControl('', Validators.required),\r\n  });\r\n\r\n  get f() {\r\n    return this.contact_form.controls;\r\n  }\r\n\r\n  changeRole(e) {\r\n    console.log(e.target.value);\r\n    this.selectedRole = e.target.value;\r\n  }\r\n\r\n  changeDep(e) {\r\n    console.log('-->>>' + e.target.value);\r\n    this.selectedDep = e.target.value;\r\n  }\r\n\r\n  public deleteEmp(id: number) {\r\n    this.employeeList.deleteEmp(id).subscribe((data) => {\r\n      console.log(data);\r\n      this.getAll();\r\n    });\r\n  }\r\n}\r\n","<div class=\"card bg-light\">\r\n  <div\r\n    *ngIf=\"isSuccess == true\"\r\n    class=\"alert alert-success alert-dismissible fade show\"\r\n    role=\"alert\"\r\n  >\r\n    <strong> {{ messageSuccess }} </strong>\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div\r\n    *ngIf=\"networkFail == true\"\r\n    class=\"alert alert-danger alert-dismissible fade show\"\r\n    role=\"alert\"\r\n  >\r\n    <strong> {{ messageFailed }} </strong>\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"container-sm\">\r\n    <div>\r\n      <h3 style=\"text-align: center; margin-top: 20px; margin-bottom: 20px;\">\r\n        List of All Employees\r\n      </h3>\r\n    </div>\r\n    <table class=\"table table-hover table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">First Name</th>\r\n          <th scope=\"col\">Last Name</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Department</th>\r\n          <th scope=\"col\">Role</th>\r\n          <th scope=\"col\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let emp of employees; let i = index\">\r\n          <th scope=\"row\">{{ i + 1 }}</th>\r\n          <td>{{ emp.firstName }}</td>\r\n          <td>{{ emp.lastName }}</td>\r\n          <td>{{ emp.emailId }}</td>\r\n          <td>{{ emp.department }}</td>\r\n          <td>{{ emp.roll }}</td>\r\n          <td>\r\n            <div class=\"col-sm-12 text-center\">\r\n              <!-- <div> -->\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-success btn-sm\"\r\n                (click)=\"showUpdateEmp(mymodal, emp)\"\r\n              >\r\n                Update\r\n              </button>\r\n              <!-- </div> -->\r\n              &nbsp;\r\n              <div\r\n                *ngIf=\"!emp.isSupervisor\"\r\n                style=\"display: inline-block; vertical-align: top;\"\r\n              >\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-primary btn-sm\"\r\n                  (click)=\"assignSupervisor(assigneeModel, emp)\"\r\n                >\r\n                  Assignee\r\n                </button>\r\n              </div>\r\n              &nbsp;\r\n              <!-- <div> -->\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-danger btn-sm\"\r\n                (click)=\"deleteEmp(emp.id)\"\r\n              >\r\n                Delete\r\n              </button>\r\n              <!-- </div> -->\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<!-- update model -->\r\n<ng-template #mymodal let-modal>\r\n  <div class=\"modal-header\">\r\n    Update Employee\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"card bg-light\">\r\n      <div\r\n        *ngIf=\"isBad == true\"\r\n        class=\"alert alert-danger alert-dismissible fade show\"\r\n        role=\"alert\"\r\n      >\r\n        <strong> {{ message }} </strong>\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <article\r\n        class=\"card-body mx-auto\"\r\n        style=\"max-width: 400px; margin-top: 20px;\"\r\n      >\r\n        <form>\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\"> <i class=\"fa fa-user\"></i> </span>\r\n            </div>\r\n            <input\r\n              class=\"form-control\"\r\n              placeholder=\"First name\"\r\n              value=\"{{ user.firstName }}\"\r\n              type=\"text\"\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              [(ngModel)]=\"user.firstName\"\r\n            />\r\n          </div>\r\n\r\n          <!-- select role -->\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\"> Role </label>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <select class=\"form-control\" (change)=\"changeRole($event)\">\r\n                    <option>Choose Role</option>\r\n                    <option *ngFor=\"let roll of rolls\">{{ roll }}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- select department -->\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <label class=\"input-group-text\"> Department </label>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                  <select class=\"form-control\" (change)=\"changeDep($event)\">\r\n                    <option>Choose Department</option>\r\n                    <option *ngFor=\"let dep of deps\">{{ dep }}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- form-group// -->\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-envelope\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              class=\"form-control\"\r\n              placeholder=\"Last Name\"\r\n              value=\"user.lastName\"\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              [(ngModel)]=\"user.lastName\"\r\n            />\r\n          </div>\r\n\r\n          <!-- form-group// -->\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-envelope\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              required\r\n              id=\"emailId\"\r\n              name=\"emailId\"\r\n              value=\"user.emailId\"\r\n              [(ngModel)]=\"user.emailId\"\r\n              class=\"form-control\"\r\n              placeholder=\"Email address\"\r\n              type=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <!-- form-group// -->\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-envelope\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              class=\"form-control\"\r\n              placeholder=\"Salary\"\r\n              type=\"text\"\r\n              id=\"salary\"\r\n              name=\"salary\"\r\n              [(ngModel)]=\"user.salary\"\r\n              value=\"user.salary\"\r\n            />\r\n          </div>\r\n\r\n          <!-- form-group// -->\r\n          <div class=\"form-group input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-envelope\"></i>\r\n              </span>\r\n            </div>\r\n            <input\r\n              class=\"form-control\"\r\n              placeholder=\"Address\"\r\n              type=\"text\"\r\n              id=\"address\"\r\n              name=\"address\"\r\n              [(ngModel)]=\"user.address\"\r\n              value=\"user.address\"\r\n            />\r\n          </div>\r\n\r\n          <!-- form-group// -->\r\n          <div class=\"form-group\">\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-primary btn-block\"\r\n              (click)=\"registerNow()\"\r\n            >\r\n              Update Employee\r\n            </button>\r\n          </div>\r\n          <!-- form-group// -->\r\n        </form>\r\n      </article>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- model for add assignee -->\r\n<ng-template #assigneeModel let-modal>\r\n  <div class=\"modal-header\">\r\n    <h3>\r\n      Assign Supervisor to &nbsp;<strong>{{ selectedEmp.firstName }}</strong>\r\n    </h3>\r\n    <button\r\n      type=\"button\"\r\n      class=\"close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    >\r\n      <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-header\" *ngIf=\"assignedSupervisor\">\r\n    <p>\r\n      <strong>{{ selectedEmp.firstName }}</strong> is currently assign\r\n      to&nbsp;<strong\r\n        >{{ assignedSupervisor.firstName }}\r\n        {{ assignedSupervisor.lastName }}</strong\r\n      >\r\n    </p>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"container-md\">\r\n      <table class=\"table table-hover table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Department</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let emp of supervisors; let i = index\">\r\n            <th scope=\"row\">{{ i + 1 }}</th>\r\n            <td>{{ emp.firstName }}</td>\r\n            <td>{{ emp.lastName }}</td>\r\n            <td>{{ emp.department }}</td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-success btn-sm\"\r\n                (click)=\"assignSupervisorToUser(emp)\"\r\n              >\r\n                Assign\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-update',\r\n  templateUrl: './employee-update.component.html',\r\n  styleUrls: ['./employee-update.component.css'],\r\n})\r\nexport class EmployeeUpdateComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h2>HIiiiiiiiiii</h2>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"/home\">Employee Management</a>\r\n  <button\r\n    class=\"navbar-toggler\"\r\n    type=\"button\"\r\n    data-toggle=\"collapse\"\r\n    data-target=\"#navbarNavDropdown\"\r\n    aria-controls=\"navbarNavDropdown\"\r\n    aria-expanded=\"false\"\r\n    aria-label=\"Toggle navigation\"\r\n  >\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/all\">Employee List</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"/add-employee\">Add Employee</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Name } from './../../home';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  myName: Name = {\r\n    name: 'From Home with the Name object',\r\n  };\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>{{ myName.name | uppercase }}</p>\r\n","export class Const {\r\n  host: string = 'http://localhost:8080/api/v2/employee/';\r\n  baseHost: string = 'http://localhost:8080/api/v2/';\r\n}\r\n","import { Assignee } from './../assignee';\r\nimport { Const } from './../const';\r\nimport { User } from './../user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmployeeCreateService {\r\n  const: Const;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.const = new Const();\r\n  }\r\n\r\n  public addEmp(user: User) {\r\n    return this.http.post<any>(this.const.host, user, {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n\r\n  public getAll() {\r\n    return this.http.get(this.const.host);\r\n  }\r\n\r\n  public deleteEmp(id: number) {\r\n    return this.http.delete<any>(this.const.host + id);\r\n  }\r\n\r\n  public updateEmp(id: number, user: User) {\r\n    return this.http.put<any>(this.const.host + id, user);\r\n  }\r\n\r\n  public getAllSuperes(name: string) {\r\n    return this.http.get(this.const.baseHost + 'assignee');\r\n  }\r\n\r\n  public addAssignee(assigne: Assignee) {\r\n    return this.http.post<any>(this.const.baseHost + 'assignee', assigne);\r\n  }\r\n\r\n  public getSupervisor(userId: number) {\r\n    return this.http.get(this.const.baseHost + 'assignee/user/' + userId);\r\n  }\r\n}\r\n","export class User {\r\n  [x: string]: any;\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  emailId: string;\r\n  salary: string;\r\n  address: string;\r\n  department: string;\r\n  roll: string;\r\n  isSupervisor: boolean;\r\n  supervisor: string;\r\n\r\n  constructor() {}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}